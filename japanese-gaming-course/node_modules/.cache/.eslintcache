[{"/home/dan/code/projects/project2/japanese-gaming-course/src/index.js":"1","/home/dan/code/projects/project2/japanese-gaming-course/src/App.js":"2","/home/dan/code/projects/project2/japanese-gaming-course/src/reportWebVitals.js":"3","/home/dan/code/projects/project2/japanese-gaming-course/src/components/Quiz.js":"4","/home/dan/code/projects/project2/japanese-gaming-course/src/components/LessonHub.js":"5","/home/dan/code/projects/project2/japanese-gaming-course/src/components/StudentInfo.js":"6","/home/dan/code/projects/project2/japanese-gaming-course/src/components/Register.js":"7","/home/dan/code/projects/project2/japanese-gaming-course/src/components/Login.js":"8","/home/dan/code/projects/project2/japanese-gaming-course/src/components/MainMenu.js":"9","/home/dan/code/projects/project2/japanese-gaming-course/src/components/JapaneseLesson.js":"10","/home/dan/code/projects/project2/japanese-gaming-course/src/components/GameCommentary.js":"11","/home/dan/code/projects/project2/japanese-gaming-course/src/components/GameData.js":"12","/home/dan/code/projects/project2/japanese-gaming-course/src/components/QuizAnswers.js":"13","/home/dan/code/projects/project2/japanese-gaming-course/src/components/MainMenuCard.js":"14","/home/dan/code/projects/project2/japanese-gaming-course/src/components/QuizQuestion.js":"15","/home/dan/code/projects/project2/japanese-gaming-course/src/components/StudentInfoQuizHistory.js":"16","/home/dan/code/projects/project2/japanese-gaming-course/src/components/ExtraExample.js":"17","/home/dan/code/projects/project2/japanese-gaming-course/src/components/Screenshot.js":"18","/home/dan/code/projects/project2/japanese-gaming-course/src/components/VocabularyTable.js":"19","/home/dan/code/projects/project2/japanese-gaming-course/src/components/MainPagePic.js":"20"},{"size":591,"mtime":1635032980402,"results":"21","hashOfConfig":"22"},{"size":2619,"mtime":1662949869552,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1635030366832,"results":"24","hashOfConfig":"22"},{"size":7346,"mtime":1662949869552,"results":"25","hashOfConfig":"22"},{"size":3961,"mtime":1662949869552,"results":"26","hashOfConfig":"22"},{"size":866,"mtime":1662934929932,"results":"27","hashOfConfig":"22"},{"size":3410,"mtime":1662952958952,"results":"28","hashOfConfig":"22"},{"size":2363,"mtime":1662952398372,"results":"29","hashOfConfig":"22"},{"size":392,"mtime":1662934718052,"results":"30","hashOfConfig":"22"},{"size":1400,"mtime":1635454064755,"results":"31","hashOfConfig":"22"},{"size":701,"mtime":1662836488728,"results":"32","hashOfConfig":"22"},{"size":1080,"mtime":1662835767608,"results":"33","hashOfConfig":"22"},{"size":1907,"mtime":1662941503892,"results":"34","hashOfConfig":"22"},{"size":1758,"mtime":1662952491922,"results":"35","hashOfConfig":"22"},{"size":1968,"mtime":1662941362432,"results":"36","hashOfConfig":"22"},{"size":707,"mtime":1662934813052,"results":"37","hashOfConfig":"22"},{"size":835,"mtime":1635363094107,"results":"38","hashOfConfig":"22"},{"size":304,"mtime":1636048290675,"results":"39","hashOfConfig":"22"},{"size":702,"mtime":1635630132882,"results":"40","hashOfConfig":"22"},{"size":303,"mtime":1635630124682,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1t0wepw",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"44"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/dan/code/projects/project2/japanese-gaming-course/src/index.js",[],["88","89"],"/home/dan/code/projects/project2/japanese-gaming-course/src/App.js",["90"],"import './App.css';\nimport React, {useState, useEffect} from \"react\"\nimport { Route, Switch, useHistory } from \"react-router-dom\"\n//import { lessons } from \"./data/lessons.js\"\nimport MainMenu from \"./components/MainMenu.js\"\nimport LessonHub from \"./components/LessonHub.js\"\nimport Quiz from \"./components/Quiz.js\"\nimport Login from \"./components/Login.js\"\nimport Register from \"./components/Register.js\"\nimport StudentInfo from \"./components/StudentInfo.js\"\n\nfunction App() {\n\n  //json calls\n  //app, login, register\n\n  const url=\"http://localhost:2500/users/\"\n  const lessonsurl = \"http://127.0.0.1:5000/lessons\"\n\n  let history = useHistory();\n  let [loggedIn, setLoggedIn] = useState(false)\n  let [user, setUser] = useState({quizzes: []})\n  let [lessons, setLessons] = useState([])\n  let [titles, setTitles] = useState([])\n\n  if (!loggedIn) { history.push(\"/login\")}\n  \n\n  function getUserInfo(getUser) {\n    setLoggedIn(true)\n    setUser({...getUser})\n    history.push(\"/\")\n    console.log(getUser)\n  }\n\n\n\n\nfunction updateUserInfo(updatedUser) {\n  setUser({...updatedUser})\n}\n\n\n\nfunction massacre() {\n // console.log(user)\n //fetch(\"http://localhost:2500/users/4\", {method: 'DELETE'})\n history.push('/peer')\n}\n\n\nuseEffect(() => {\n  fetch(lessonsurl)\n  .then(res => res.json())\n  .then(data => {\n    setLessons(data)\n    makeLessons(data)\n})\n}, [])\n\n\nfunction makeLessons(lessons) {\n  setLessons(lessons)\n//  console.log(lessons)\n\n \n  setTitles( \n        lessons.map(i => { \n          \n\n          return {\n          id: i.id,\n          title: i.title,\n          isGame: i.isgame,\n          cover: i.cover.front,\n          shortDescription: i.japanesesection.shortdescription\n      }\n\n   }))\n\n\n}\n\n\n  \n\n  return (\n    <div className=\"top\">\n      <p className=\"centeredText\">Dan's Japanese Page</p>\n    <Switch>\n      <Route exact path=\"/\">\n          <MainMenu titles = {titles} paidHowFar={user.paidHowFar*5} user={user} />\n      </Route>\n      <Route path=\"/lesson/:id\">\n          <LessonHub lessons = {lessons} />\n      </Route>\n      <Route path=\"/quiz/:id\">\n          <Quiz lessons={lessons} userName={user.userName} url={url} userId={user.id} user={user} updateUserInfo={updateUserInfo} />\n      </Route>\n      <Route path=\"/login\">\n          <Login url ={url} getUserInfo={getUserInfo} />\n      </Route>\n      <Route path=\"/register\">\n        <Register url={url} />\n      </Route>\n\n      <Route path=\"/peer\">\n        \n      </Route>\n    </Switch>\n    \n    <Switch>\n    <Route exact path=\"/\">\n      <StudentInfo loggedIn={loggedIn} user={user}/>\n    </Route>\n    </Switch>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","/home/dan/code/projects/project2/japanese-gaming-course/src/reportWebVitals.js",[],"/home/dan/code/projects/project2/japanese-gaming-course/src/components/Quiz.js",["91","92"],"import React, { useEffect, useState } from \"react\"\nimport './styles/Quiz.css'\nimport { useParams, NavLink } from \"react-router-dom\"\nimport QuizQuestion from \"./QuizQuestion.js\"\nimport QuizAnswers from \"./QuizAnswers.js\"\n\nfunction Quiz({lessons, userName, url, userId, user, updateUserInfo}) {\n\n    let userUrl = url+userId\n    //console.log(userUrl)\n    \n    const params = useParams()\n\n\n    //let quizData = lessons.find(i => { return i.id === parseInt(params.id) * 5 }).quizData\n   // let noOfQuestions = 0\n //  let mcAnswers = 0\n    let [questionData, setQuestionData] = useState(null)\n    \n    let [quizData, setQuizData] = useState(null)\n    let [questionNumber, setQuestionNumber] = useState(1)\n    let [useKanji, setUseKanji] = useState(true)\n    let [questionType, setQuestionType] = useState(\"multipleChoiceQuestions\")\n    let [noOfQuestions, setNoOfQuestions] = useState(0)\n    let [answers, setAnswers] = useState([])\n    let [quizGoingOn, setQuizGoingOn] = useState(true)\n    let [mcAnswers, setMcAnswers] = useState(null)\n    \n\n\n\n    useEffect( () => {\n        let url=\"http://127.0.0.1:5000/quizzes/\"+params.id\n        fetch(url)\n        .then(res => res.json())\n        .then(data => { \n            createQuiz(data)\n            let tempAns=[]\n        for(let i=0; i < noOfQuestions; i++) { tempAns.push(null) }\n        setAnswers([...tempAns])\n        })\n\n        \n    }, [])\n\n   \n    function createQuiz(data){\n        \n        let mcq = []\n        for (let i of data.questions) { \n            mcq.push({\n                question: i.ques,\n                choices: [\n                    i.choice1.split(\"||\"),\n                    i.choice2.split(\"||\"),\n                    i.choice3.split(\"||\"),\n                    i.choice4.split(\"||\")\n                ],\n                correctChoice: i.correctChoice\n\n            }) }\n        let qData = {\n            quizNo: params.id,\n            multipleChoiceQuestions: mcq\n        }\n        console.log(\"qdata\", qData)\n        setNoOfQuestions(qData.multipleChoiceQuestions.length)\n        setMcAnswers(qData.multipleChoiceQuestions.map(i => i.correctChoice))\n        setQuestionData(qData.multipleChoiceQuestions[0])\n    \n        setQuizData(qData)\n\n    }\n\n    function handleChange(answer) {\n\n        let tempAnswer=[...answers]\n        \n\n        if ( questionType === \"multipleChoiceQuestions\") {\n            let oldChoice = document.querySelectorAll(\".chosen\")\n            \n            if (oldChoice.length !== 0) {\n                for (let i of oldChoice) {\n                    i.className = \"unchosen\"\n                }\n            }\n            answer.target.className=\"chosen\"\n            tempAnswer[questionNumber-1] = answer.target.id\n         }\n\n        else { \n            tempAnswer[questionNumber-1] = answer\n        }\n\n        console.log(tempAnswer)\n        setAnswers([...tempAnswer])\n    }\n\n    function changeKanji(){\n        setUseKanji(!useKanji)\n    }\n\n    function goBack(){\n        if (questionNumber !== 1) { setQuestionNumber(questionNumber - 1) }\n        clearAnswers()\n    }\n\n    function goForward(){\n        if (questionNumber !== noOfQuestions) { setQuestionNumber(questionNumber + 1) }\n        clearAnswers()\n    }\n\n    function clearAnswers() {\n        console.log(answers)\n\n        if ( questionType === \"multipleChoiceQuestions\") {\n            let oldChoice = document.querySelectorAll(\".chosen\")\n            \n            if (oldChoice.length !== 0) {\n                for (let i of oldChoice) {\n                    i.className = \"unchosen\"\n                }\n            }\n        \n\n\n         }\n\n         else {\n            let answerBox = document.querySelector(\"#box\")\n            answerBox.value=\"\"\n         }\n    }\n\n    useEffect(() => {\n        \n\n//        else { \n            setQuestionType(\"multipleChoiceQuestions\")\n            if (quizData) {\n            setQuestionData(quizData.multipleChoiceQuestions[questionNumber-1])\n         }\n    }, [questionNumber])\n\n\n\n\n\n    function gradeQuiz() {\n        let right=0\n        let ques=\"question\"\n        for (let i=0; i < quizData.multipleChoiceQuestions.length; i++) {\n            if (mcAnswers[i] === answers[i]) { right += 1 }\n        }\n        if (right > 1) { ques += \"s\" }\n        if (right === 0) { ques += \"s\" }\n        let gradeSpiel = `You got ${right} ${ques} right out of ${quizData.multipleChoiceQuestions.length}. That's ${right/quizData.multipleChoiceQuestions.length*100}%`\n        document.querySelector(\"#grade\").innerHTML=gradeSpiel\n\n\n\n\n\n        let quizzes = {...user.quizzes}\n\n\n        quizzes[\"quiz\"+params.id] = {\n            \n                \n                \n                id: quizData.quizNo,\n                mcScore: Math.floor(right/quizData.multipleChoiceQuestions.length*100),\n           \n                }\n            \n          \n          user.canBeGraded = false\n          let fullquizzes = {...user, quizzes}\n          \n      // console.log(user)\n        \n       fetch(userUrl, {\n           method: 'PATCH',\n           headers: {'Content-Type': 'application/json'},\n           body: JSON.stringify(fullquizzes)\n       })\n       .then(res => res.json())\n       .then(data => {\n        updateUserInfo(data)\n        setQuizGoingOn(!quizGoingOn)\n       })\n\n    }\n    // <p className=\"centeredText\">Question {questionNumber} of {noOfQuestions}</p>\n\n\n    let backButton = <div><br /><button onClick={goBack}>Previous Question</button></div>\n    let submitButton = <div><br /><button className=\"inputBox\"  onClick={gradeQuiz}>Let's Get this Baby Graded!</button></div>\n    let nextButton = <div><br /><button onClick={goForward}>Next Question</button></div>\n    let kanjiButton = (\n            <div>\n                <br />\n                {useKanji ? <button onClick={changeKanji}>Get rid of the Kanji</button> : <button onClick={changeKanji}>Show me the Kanji</button>}\n            </div>\n    )\n    let backToMenuButton = (\n        <div>\n            <br />\n                <NavLink to=\"../../\">\n                    <button>Return to Main Menu</button>\n                </NavLink>\n        </div>\n    )\n\n    let quizAnswers = (\n        <div>\n            <QuizAnswers answers={answers} quizData={quizData} useKanji={useKanji}/>\n        </div>\n    )\n\n     let questionComponent = <QuizQuestion questionData={questionData} useKanji={useKanji} questionType={questionType} questionNumber={questionNumber} handleChange={handleChange} answers={answers} />\n\n\n\n\n    function setgoingOn(){\n        setQuizGoingOn(!quizGoingOn)\n    }\n\n\n//246:  {quizGoingOn ? questionComponent : null}\n    return (\n        <div className=\"quizPage\">\n            <div className=\"questionNumber\">{quizGoingOn ? kanjiButton : quizAnswers}</div>\n\n            \n\n            <div className=\"kanjiKanaButton\">{quizGoingOn ? backToMenuButton : null}</div>\n\n\n            <div className=\"quizQuestion\">\n            {quizGoingOn ? questionComponent : null}\n            </div>\n\n            <div className=\"backButton\">{quizGoingOn ? backButton : null}</div>\n            <div className=\"submitButton\">{quizGoingOn ? submitButton : null}</div>\n            <div className=\"nextButton\">{quizGoingOn ? nextButton : null}</div>\n\n\n\n\n\n            <div className=\"middleForDev\" onClick={setgoingOn}>\n                <p className=\"centeredText\" id=\"grade\"></p>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Quiz","/home/dan/code/projects/project2/japanese-gaming-course/src/components/LessonHub.js",["93","94"],"import React, {useState, useEffect} from \"react\";\nimport GameData from \"./GameData.js\"\nimport GameCommentary from \"./GameCommentary.js\"\nimport JapaneseLesson from \"./JapaneseLesson.js\"\nimport './styles/Lesson.css';\nimport { useParams, NavLink, Switch, Route } from \"react-router-dom\"\n\nfunction LessonHub({lessons}) {\n\n    const [lesson, setLesson] = useState({})\n    const [sendToGameData, setSendToGameData] = useState(null)\n    const [sendToCommentary, setSendToCommentary] = useState(null)\n    const [sendToJapaneseLesson, setSendToJapaneseLesson] = useState(null)\n\n    const params=useParams()\n    const lessonsurl = \"http://127.0.0.1:5000/lessons/\" + params.id\n\n    useEffect(() => {\n        fetch(lessonsurl)\n        .then(res => res.json())\n        .then(data => {\n            console.log(data)\n            formatSendToGameData(data)\n            formatSendToCommentary(data)\n            formatSendToJapaneseLesson(data)\n        })\n      }, [])\n\n\n      function formatSendToGameData(data) {\n        let pics = ({ \n            front: data.cover.front,\n            back: data.cover.back,\n            titlescreen: data.cover.titlescreen,\n            otherPics: data.otherpics\n        })\n      setLesson(data)\n\n      let info = ({\n        title: data.title,\n        releases: data.releases\n      })\n\n      setSendToGameData({\n        pics: pics,\n        info: info\n      })\n      }\n\n      function formatSendToCommentary(data) {\n        let gameCopy = data.paragraphs.map((i) => i.text )\n        setSendToCommentary({\n            gameCopy: gameCopy,\n            screenshots: data.screenshots\n        })\n        \n      }\n\n      function formatSendToJapaneseLesson(data) {\n\n\n        setSendToJapaneseLesson({\n            lessonTitle: data.japanesesection.lessontitle,\n            shortDescription: data.japanesesection.shortdescription,\n            howToMake: data.howtomakes.map(i => i.text),\n            screenshot: data.japanesesection.screenshot,\n            mainCopy: data.japanesecopyparagraphs.map(i => i.text),\n            mainExample: data.examples[0],\n            extraExamples: data.examples.slice(1,),\n            vocabulary: data.vocabwords.map(i => [i.kanji, i.nokanji, i.english])\n        })\n\n      }\n      \n    \n\n    //let lesson = lessons.find(i => { return i.id === parseInt(params.id) })\n    let mainLink=`/lesson/${params.id}/main`\n    let gameLink=`/lesson/${params.id}/game`\n    let japaneseLink=`/lesson/${params.id}/japanese`\n\n    // <GameData pics={pics} info={info}/>\n\n    return(\n        <div className=\"hub\">\n            <div className=\"mainInfo\">\n            <p className=\"centeredText\">\n                  <NavLink to={mainLink}>Front Page</NavLink>\n                </p>\n            </div>\n            <div className=\"linkToGame\">\n            <p className=\"centeredText\">\n                  <NavLink to={gameLink}>Game Commentary</NavLink>\n                </p>\n            </div>\n            <div className=\"linktoJapanese\">\n            <p className=\"centeredText\">\n            <NavLink to={japaneseLink}>Japanese Lesson</NavLink>\n                </p>\n            </div>\n            <div className=\"linkBack\">\n            <p className=\"centeredText\">\n                <NavLink to=\"../../\">Back</NavLink>\n                </p>\n            </div>\n\n           \n            <div className=\"theLesson\">\n                \n                <Switch>\n                    <Route path={mainLink}>\n                      {sendToGameData &&  <GameData sentData={sendToGameData}/> }\n                    </Route>\n                    <Route path={gameLink}>\n                      {sendToCommentary && <GameCommentary sentData={sendToCommentary}/> }\n                    </Route>\n                    <Route path={japaneseLink}>\n                      {sendToJapaneseLesson && <JapaneseLesson japaneseCopy={sendToJapaneseLesson}/> }\n                    </Route>\n\n                </Switch>\n            </div> \n        </div> \n    )\n}\n\nexport default LessonHub","/home/dan/code/projects/project2/japanese-gaming-course/src/components/StudentInfo.js",["95"],"import React from \"react\";\nimport '../App.css';\nimport StudentInfoQuizHistory from \"./StudentInfoQuizHistory.js\"\nimport { useHistory } from \"react-router-dom\"\n\nfunction StudentInfo({loggedIn, user}) {\n\n    let quizList = []\n    const history = useHistory()\n\n    console.log(user.canBeGraded)\n\n    \n        for (let quiz in user.quizzes){\n            quizList.push(<StudentInfoQuizHistory quiz={user.quizzes[quiz]} />)\n        }\n    \n\n    if(!loggedIn) {\n        return(\n            <div></div>\n        )\n    }\n\n\n    if(loggedIn) {\n        return(\n            <div>\n\n                <p className=\"centeredText\">Grade information for {user.userName}</p>\n                    {quizList}\n                <br />\n                <br />\n                <br />\n                {user.canBeGraded ? null : null}\n            </div>\n        )\n    }\n\n}\n\nexport default StudentInfo","/home/dan/code/projects/project2/japanese-gaming-course/src/components/Register.js",["96"],"/home/dan/code/projects/project2/japanese-gaming-course/src/components/Login.js",["97","98","99","100"],"/home/dan/code/projects/project2/japanese-gaming-course/src/components/MainMenu.js",[],"/home/dan/code/projects/project2/japanese-gaming-course/src/components/JapaneseLesson.js",[],"/home/dan/code/projects/project2/japanese-gaming-course/src/components/GameCommentary.js",[],"/home/dan/code/projects/project2/japanese-gaming-course/src/components/GameData.js",[],"/home/dan/code/projects/project2/japanese-gaming-course/src/components/QuizAnswers.js",[],"/home/dan/code/projects/project2/japanese-gaming-course/src/components/MainMenuCard.js",[],"/home/dan/code/projects/project2/japanese-gaming-course/src/components/QuizQuestion.js",["101"],"import React, { useEffect } from \"react\"\nimport './styles/Quiz.css'\n\nfunction QuizQuestion({questionData, useKanji, questionType, questionNumber, handleChange, answers}) {\n\n    console.log(questionData)\n    let choices\n\n    if ( questionData) {\n\n        if (useKanji) { choices = questionData.choices.map(i => i[0]) }\n        if (!useKanji) { choices = questionData.choices.map(i => i[1]) }\n\n       \n\n\n    }\n\n\n    function restoreMultipleChoice() {\n        if (answers[questionNumber-1] !== null) {\n            let previouslyChosen = document.querySelectorAll(`#${answers[questionNumber-1]}`)\n            \n            for (let i of previouslyChosen) {\n                i.className = \"chosen\"\n            }\n        }\n    }\n\n\n\n    function restoreAnswer() {\n        console.log(\"A\")\n        if (answers[questionNumber-1] !== null) {\n            let box = document.querySelector(\"#box\")\n            box.value=answers[questionNumber-1]\n        }\n\n    }\n\n\n    useEffect(() => {\n        if ( questionType === \"multipleChoiceQuestions\") { restoreMultipleChoice() }\n        else { restoreAnswer() }\n\n\n    }, [questionNumber])\n\n    if (questionData) {\n    return(\n        <div className=\"questionDiv\">\n        <h3 className=\"centeredText\">{questionNumber}. {questionData.question}</h3>\n        <div id=\"A\" className=\"unchosen\" onClick={e => handleChange(e)} >\n            <p id=\"A\">Ａ。{choices[0]}</p>\n        </div>\n    \n        <div id=\"B\" className=\"unchosen\" onClick={e => handleChange(e)} >\n            <p id=\"B\">Ｂ。{choices[1]}</p>\n        </div>\n    \n        <div id=\"C\" className=\"unchosen\" onClick={e => handleChange(e)} >\n            <p id=\"C\">Ｃ。{choices[2]}</p>\n        </div>\n    \n        <div id=\"D\" className=\"unchosen\" onClick={e => handleChange(e)} >\n            <p id=\"D\">Ｄ。{choices[3]}</p>\n        </div>\n        <br />\n    </div>\n    )\n    }\n\n    else {\n        return(\n            <div></div>\n        )\n    }\n\n\n\n\n\n}\n\nexport default QuizQuestion","/home/dan/code/projects/project2/japanese-gaming-course/src/components/StudentInfoQuizHistory.js",[],"/home/dan/code/projects/project2/japanese-gaming-course/src/components/ExtraExample.js",[],"/home/dan/code/projects/project2/japanese-gaming-course/src/components/Screenshot.js",[],"/home/dan/code/projects/project2/japanese-gaming-course/src/components/VocabularyTable.js",[],"/home/dan/code/projects/project2/japanese-gaming-course/src/components/MainPagePic.js",[],{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":45,"column":10,"nodeType":"108","messageId":"109","endLine":45,"endColumn":18},{"ruleId":"110","severity":1,"message":"111","line":44,"column":8,"nodeType":"112","endLine":44,"endColumn":10,"suggestions":"113"},{"ruleId":"110","severity":1,"message":"114","line":144,"column":8,"nodeType":"112","endLine":144,"endColumn":24,"suggestions":"115"},{"ruleId":"106","severity":1,"message":"116","line":10,"column":12,"nodeType":"108","messageId":"109","endLine":10,"endColumn":18},{"ruleId":"110","severity":1,"message":"117","line":27,"column":10,"nodeType":"112","endLine":27,"endColumn":12,"suggestions":"118"},{"ruleId":"106","severity":1,"message":"119","line":9,"column":11,"nodeType":"108","messageId":"109","endLine":9,"endColumn":18},{"ruleId":"106","severity":1,"message":"120","line":1,"column":26,"nodeType":"108","messageId":"109","endLine":1,"endColumn":35},{"ruleId":"106","severity":1,"message":"120","line":1,"column":26,"nodeType":"108","messageId":"109","endLine":1,"endColumn":35},{"ruleId":"106","severity":1,"message":"121","line":3,"column":19,"nodeType":"108","messageId":"109","endLine":3,"endColumn":25},{"ruleId":"106","severity":1,"message":"122","line":3,"column":27,"nodeType":"108","messageId":"109","endLine":3,"endColumn":37},{"ruleId":"106","severity":1,"message":"123","line":21,"column":14,"nodeType":"108","messageId":"109","endLine":21,"endColumn":22},{"ruleId":"110","severity":1,"message":"124","line":47,"column":8,"nodeType":"112","endLine":47,"endColumn":24,"suggestions":"125"},"no-native-reassign",["126"],"no-negated-in-lhs",["127"],"no-unused-vars","'massacre' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'createQuiz', 'noOfQuestions', and 'params.id'. Either include them or remove the dependency array.","ArrayExpression",["128"],"React Hook useEffect has a missing dependency: 'quizData'. Either include it or remove the dependency array.",["129"],"'lesson' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'lessonsurl'. Either include it or remove the dependency array.",["130"],"'history' is assigned a value but never used.","'useEffect' is defined but never used.","'Switch' is defined but never used.","'useHistory' is defined but never used.","'oldLogin' is defined but never used.","React Hook useEffect has missing dependencies: 'questionType', 'restoreAnswer', and 'restoreMultipleChoice'. Either include them or remove the dependency array.",["131"],"no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},"Update the dependencies array to be: [createQuiz, noOfQuestions, params.id]",{"range":"140","text":"141"},"Update the dependencies array to be: [questionNumber, quizData]",{"range":"142","text":"143"},"Update the dependencies array to be: [lessonsurl]",{"range":"144","text":"145"},"Update the dependencies array to be: [questionNumber, questionType, restoreAnswer, restoreMultipleChoice]",{"range":"146","text":"147"},[1387,1389],"[createQuiz, noOfQuestions, params.id]",[3943,3959],"[questionNumber, quizData]",[947,949],"[lessonsurl]",[1099,1115],"[questionNumber, questionType, restoreAnswer, restoreMultipleChoice]"]