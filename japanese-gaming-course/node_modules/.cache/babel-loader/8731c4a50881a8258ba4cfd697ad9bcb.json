{"ast":null,"code":"var _jsxFileName = \"/home/dan/code/projects/project2/japanese-gaming-course/src/components/StudentInfo.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport '../App.css';\nimport StudentInfoQuizHistory from \"./StudentInfoQuizHistory.js\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StudentInfo(_ref) {\n  _s();\n\n  let {\n    loggedIn,\n    user\n  } = _ref;\n  let quizList = [];\n  const history = useHistory();\n  console.log(user.canBeGraded);\n\n  function directToPeer() {\n    history.push('/peer');\n  }\n\n  for (let quiz in user.quizzes) {\n    //console.log(user.quizzes[quiz])\n    quizList.push( /*#__PURE__*/_jsxDEV(StudentInfoQuizHistory, {\n      quiz: user.quizzes[quiz]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 27\n    }, this));\n  }\n\n  if (!loggedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n  let peerGradingButton = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"centeredButton\",\n      onClick: directToPeer,\n      children: \"Peer Grade\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centeredText\",\n      children: \"Note: In order for your open ended quiz questions to be graded, you must first do a round of peer grading every time you take a quiz.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n\n  if (loggedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"centeredText\",\n        children: [\"Grade information for \", user.userName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), quizList, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), user.canBeGraded ? null : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(StudentInfo, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = StudentInfo;\nexport default StudentInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentInfo\");","map":{"version":3,"names":["React","StudentInfoQuizHistory","useHistory","StudentInfo","loggedIn","user","quizList","history","console","log","canBeGraded","directToPeer","push","quiz","quizzes","peerGradingButton","userName"],"sources":["/home/dan/code/projects/project2/japanese-gaming-course/src/components/StudentInfo.js"],"sourcesContent":["import React from \"react\";\nimport '../App.css';\nimport StudentInfoQuizHistory from \"./StudentInfoQuizHistory.js\"\nimport { useHistory } from \"react-router-dom\"\n\nfunction StudentInfo({loggedIn, user}) {\n\n    let quizList = []\n    const history = useHistory()\n\n    console.log(user.canBeGraded)\n\n    function directToPeer() {\n        history.push('/peer')\n       }\n    \n        for (let quiz in user.quizzes){\n            //console.log(user.quizzes[quiz])\n            quizList.push(<StudentInfoQuizHistory quiz={user.quizzes[quiz]} />)\n        }\n    \n\n    if(!loggedIn) {\n        return(\n            <div></div>\n        )\n    }\n\n    let peerGradingButton = (\n        <div>\n            <button className=\"centeredButton\" onClick={directToPeer}>Peer Grade</button>\n            <p className=\"centeredText\">Note: In order for your open ended quiz questions to be graded, you must first do a round of peer grading every time you take a quiz.</p>\n        </div>\n    )\n\n    if(loggedIn) {\n        return(\n            <div>\n\n                <p className=\"centeredText\">Grade information for {user.userName}</p>\n                    {quizList}\n                <br />\n                <br />\n                <br />\n                {user.canBeGraded ? null : null}\n            </div>\n        )\n    }\n\n}\n\nexport default StudentInfo"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,sBAAP,MAAmC,6BAAnC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,SAASC,WAAT,OAAuC;EAAA;;EAAA,IAAlB;IAACC,QAAD;IAAWC;EAAX,CAAkB;EAEnC,IAAIC,QAAQ,GAAG,EAAf;EACA,MAAMC,OAAO,GAAGL,UAAU,EAA1B;EAEAM,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACK,WAAjB;;EAEA,SAASC,YAAT,GAAwB;IACpBJ,OAAO,CAACK,IAAR,CAAa,OAAb;EACA;;EAEA,KAAK,IAAIC,IAAT,IAAiBR,IAAI,CAACS,OAAtB,EAA8B;IAC1B;IACAR,QAAQ,CAACM,IAAT,eAAc,QAAC,sBAAD;MAAwB,IAAI,EAAEP,IAAI,CAACS,OAAL,CAAaD,IAAb;IAA9B;MAAA;MAAA;MAAA;IAAA,QAAd;EACH;;EAGL,IAAG,CAACT,QAAJ,EAAc;IACV,oBACI;MAAA;MAAA;MAAA;IAAA,QADJ;EAGH;;EAED,IAAIW,iBAAiB,gBACjB;IAAA,wBACI;MAAQ,SAAS,EAAC,gBAAlB;MAAmC,OAAO,EAAEJ,YAA5C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAG,SAAS,EAAC,cAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;;EAOA,IAAGP,QAAH,EAAa;IACT,oBACI;MAAA,wBAEI;QAAG,SAAS,EAAC,cAAb;QAAA,qCAAmDC,IAAI,CAACW,QAAxD;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,EAGSV,QAHT,eAII;QAAA;QAAA;QAAA;MAAA,QAJJ,eAKI;QAAA;QAAA;QAAA;MAAA,QALJ,eAMI;QAAA;QAAA;QAAA;MAAA,QANJ,EAOKD,IAAI,CAACK,WAAL,GAAmB,IAAnB,GAA0B,IAP/B;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAWH;AAEJ;;GA5CQP,W;UAGWD,U;;;KAHXC,W;AA8CT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}