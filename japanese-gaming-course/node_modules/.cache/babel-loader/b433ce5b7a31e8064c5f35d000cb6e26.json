{"ast":null,"code":"var _jsxFileName = \"/home/dan/code/projects/japanese-gaming-course/src/components/StudentInfoQuizHistory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction StudentInfoQuizHistory(_ref) {\n  _s();\n\n  let {\n    quiz\n  } = _ref;\n  let [open, setOpen] = useState(false);\n  let freeResp = quiz.freeResponse.map(i => {\n    if (i.noOfPeerGrades < 5) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Question: \", i.question, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 55\n        }, this), \"Your answer: \", i.answer, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 36\n        }, this), \"You can see whether this is correct or not once 5 students peer grade it. Currently only \", i.noOfPeerGrades, \" students have graded it.\"]\n      }, i.question, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this);\n    }\n\n    let percentage = i.correctPeerGrades / i.noOfPeerGrades * 100;\n    let correctnessSpeil;\n\n    if (percentage >= 50) {\n      correctnessSpeil = \"You were correct! Nice work!\";\n    } else {\n      correctnessSpeil = \"Sorry, this answer was not correct. You can always try the quiz again.\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Question: \", i.question, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 39\n      }, this), \"Your answer: \", i.answer, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 40\n      }, this), correctnessSpeil, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 35\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 40\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  });\n\n  function openClose() {\n    setOpen(!open);\n  }\n\n  if (!open) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Quiz \", quiz.id, \" Info \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: openClose,\n        children: \"Open\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }, this);\n  }\n\n  if (open) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Quiz \", quiz.id, \" Info \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: openClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 79\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 85\n      }, this), \"Multiple Choice Questions Score: \", quiz.mcScore, freeResp]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(StudentInfoQuizHistory, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = StudentInfoQuizHistory;\nexport default StudentInfoQuizHistory;\n\nvar _c;\n\n$RefreshReg$(_c, \"StudentInfoQuizHistory\");","map":{"version":3,"names":["React","useState","StudentInfoQuizHistory","quiz","open","setOpen","freeResp","freeResponse","map","i","noOfPeerGrades","question","answer","percentage","correctPeerGrades","correctnessSpeil","openClose","id","mcScore"],"sources":["/home/dan/code/projects/japanese-gaming-course/src/components/StudentInfoQuizHistory.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport '../App.css';\n\nfunction StudentInfoQuizHistory({quiz}) {\n\n    let [open, setOpen] = useState(false)\n\n    let freeResp = quiz.freeResponse.map(i => {\n        if (i.noOfPeerGrades < 5) { return(\n            <p key={i.question}>Question: {i.question}<br />\n            Your answer: {i.answer}<br/>\n            You can see whether this is correct or not once 5 students peer grade it. Currently only {i.noOfPeerGrades} students have graded it.\n            </p>\n        ) }\n        let percentage = i.correctPeerGrades/i.noOfPeerGrades*100\n        let correctnessSpeil\n        if (percentage >= 50) { correctnessSpeil = \"You were correct! Nice work!\" }\n        else { correctnessSpeil = \"Sorry, this answer was not correct. You can always try the quiz again.\" }\n        return (\n            <p>\n                Question: {i.question}<br />\n                Your answer: {i.answer}<br/>\n                {correctnessSpeil}<br/><br/>\n            </p>\n        )\n\n    })\n\n        function openClose() {\n            setOpen(!open)\n        }\n\n\n        if (!open) {\n            return(\n                <div>\n                    Quiz {quiz.id} Info <button onClick={openClose}>Open</button>\n                </div>\n            )\n        }\n\n        if (open) {\n        return(\n            <div>\n                Quiz {quiz.id} Info <button onClick={openClose}>Close</button><br /><br />\n                     Multiple Choice Questions Score: {quiz.mcScore}\n                     {freeResp}\n            </div>\n        )\n        }\n    }\n\n\n\nexport default StudentInfoQuizHistory"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,YAAP;;;AAEA,SAASC,sBAAT,OAAwC;EAAA;;EAAA,IAAR;IAACC;EAAD,CAAQ;EAEpC,IAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,KAAD,CAA9B;EAEA,IAAIK,QAAQ,GAAGH,IAAI,CAACI,YAAL,CAAkBC,GAAlB,CAAsBC,CAAC,IAAI;IACtC,IAAIA,CAAC,CAACC,cAAF,GAAmB,CAAvB,EAA0B;MAAE,oBACxB;QAAA,yBAA+BD,CAAC,CAACE,QAAjC,eAA0C;UAAA;UAAA;UAAA;QAAA,QAA1C,mBACcF,CAAC,CAACG,MADhB,eACuB;UAAA;UAAA;UAAA;QAAA,QADvB,+FAE0FH,CAAC,CAACC,cAF5F;MAAA,GAAQD,CAAC,CAACE,QAAV;QAAA;QAAA;QAAA;MAAA,QADwB;IAKzB;;IACH,IAAIE,UAAU,GAAGJ,CAAC,CAACK,iBAAF,GAAoBL,CAAC,CAACC,cAAtB,GAAqC,GAAtD;IACA,IAAIK,gBAAJ;;IACA,IAAIF,UAAU,IAAI,EAAlB,EAAsB;MAAEE,gBAAgB,GAAG,8BAAnB;IAAmD,CAA3E,MACK;MAAEA,gBAAgB,GAAG,wEAAnB;IAA6F;;IACpG,oBACI;MAAA,yBACeN,CAAC,CAACE,QADjB,eAC0B;QAAA;QAAA;QAAA;MAAA,QAD1B,mBAEkBF,CAAC,CAACG,MAFpB,eAE2B;QAAA;QAAA;QAAA;MAAA,QAF3B,EAGKG,gBAHL,eAGsB;QAAA;QAAA;QAAA;MAAA,QAHtB,eAG2B;QAAA;QAAA;QAAA;MAAA,QAH3B;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAQH,CAnBc,CAAf;;EAqBI,SAASC,SAAT,GAAqB;IACjBX,OAAO,CAAC,CAACD,IAAF,CAAP;EACH;;EAGD,IAAI,CAACA,IAAL,EAAW;IACP,oBACI;MAAA,oBACUD,IAAI,CAACc,EADf,yBACwB;QAAQ,OAAO,EAAED,SAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADxB;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAKH;;EAED,IAAIZ,IAAJ,EAAU;IACV,oBACI;MAAA,oBACUD,IAAI,CAACc,EADf,yBACwB;QAAQ,OAAO,EAAED,SAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADxB,eACkE;QAAA;QAAA;QAAA;MAAA,QADlE,eACwE;QAAA;QAAA;QAAA;MAAA,QADxE,uCAE2Cb,IAAI,CAACe,OAFhD,EAGUZ,QAHV;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAOC;AACJ;;GA/CIJ,sB;;KAAAA,sB;AAmDT,eAAeA,sBAAf"},"metadata":{},"sourceType":"module"}