{"ast":null,"code":"var _jsxFileName = \"/home/dan/code/projects/project2/japanese-gaming-course/src/components/QuizQuestion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport './styles/Quiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QuizQuestion(_ref) {\n  _s();\n\n  let {\n    questionData,\n    useKanji,\n    questionType,\n    questionNumber,\n    handleChange,\n    answers\n  } = _ref;\n  let choices;\n\n  if (questionType === \"multipleChoiceQuestions\") {//       if (useKanji) { choices = questionData.choices.map(i => i[0]) }\n    //       if (!useKanji) { choices = questionData.choices.map(i => i[1]) }\n  }\n\n  function restoreMultipleChoice() {\n    if (answers[questionNumber - 1] !== null) {\n      let previouslyChosen = document.querySelectorAll(`#${answers[questionNumber - 1]}`);\n\n      for (let i of previouslyChosen) {\n        i.className = \"chosen\";\n      }\n    }\n  }\n\n  function restoreAnswer() {\n    console.log(\"A\");\n\n    if (answers[questionNumber - 1] !== null) {\n      let box = document.querySelector(\"#box\");\n      box.value = answers[questionNumber - 1];\n    }\n  }\n\n  useEffect(() => {\n    if (questionType === \"multipleChoiceQuestions\") {\n      restoreMultipleChoice();\n    } else {\n      restoreAnswer();\n    }\n  }, [questionNumber]);\n\n  let mcq = /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 12\n  }, this);\n\n  if (questionType === \"multipleChoiceQuestions\") {\n    return {\n      mcq\n    };\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"centeredText\",\n        children: [questionNumber, \". \", questionData]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputBox\",\n        id: \"box\",\n        onChange: e => handleChange(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this);\n  }\n}\n\n_s(QuizQuestion, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = QuizQuestion;\nexport default QuizQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizQuestion\");","map":{"version":3,"names":["React","useEffect","QuizQuestion","questionData","useKanji","questionType","questionNumber","handleChange","answers","choices","restoreMultipleChoice","previouslyChosen","document","querySelectorAll","i","className","restoreAnswer","console","log","box","querySelector","value","mcq","e","target"],"sources":["/home/dan/code/projects/project2/japanese-gaming-course/src/components/QuizQuestion.js"],"sourcesContent":["import React, { useEffect } from \"react\"\nimport './styles/Quiz.css'\n\nfunction QuizQuestion({questionData, useKanji, questionType, questionNumber, handleChange, answers}) {\n\n    let choices\n\n    if ( questionType === \"multipleChoiceQuestions\") {\n //       if (useKanji) { choices = questionData.choices.map(i => i[0]) }\n //       if (!useKanji) { choices = questionData.choices.map(i => i[1]) }\n\n       \n\n\n    }\n\n\n    function restoreMultipleChoice() {\n        if (answers[questionNumber-1] !== null) {\n            let previouslyChosen = document.querySelectorAll(`#${answers[questionNumber-1]}`)\n            \n            for (let i of previouslyChosen) {\n                i.className = \"chosen\"\n            }\n        }\n    }\n\n\n\n    function restoreAnswer() {\n        console.log(\"A\")\n        if (answers[questionNumber-1] !== null) {\n            let box = document.querySelector(\"#box\")\n            box.value=answers[questionNumber-1]\n        }\n\n    }\n\n\n    useEffect(() => {\n        if ( questionType === \"multipleChoiceQuestions\") { restoreMultipleChoice() }\n        else { restoreAnswer() }\n\n\n    }, [questionNumber])\n\n\nlet mcq = (<div></div>)\n\n    if (questionType === \"multipleChoiceQuestions\") {\n    return{mcq}\n    }\n\n\n\n\n\n    else {\n            return(\n                <div>\n                    <h3 className=\"centeredText\">{questionNumber}. {questionData}</h3>\n                    <input className=\"inputBox\" id =\"box\" onChange={e => handleChange(e.target.value)} />\n                </div>\n            )\n        }\n    \n\n}\n\nexport default QuizQuestion"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,mBAAP;;;AAEA,SAASC,YAAT,OAAqG;EAAA;;EAAA,IAA/E;IAACC,YAAD;IAAeC,QAAf;IAAyBC,YAAzB;IAAuCC,cAAvC;IAAuDC,YAAvD;IAAqEC;EAArE,CAA+E;EAEjG,IAAIC,OAAJ;;EAEA,IAAKJ,YAAY,KAAK,yBAAtB,EAAiD,CACpD;IACA;EAKI;;EAGD,SAASK,qBAAT,GAAiC;IAC7B,IAAIF,OAAO,CAACF,cAAc,GAAC,CAAhB,CAAP,KAA8B,IAAlC,EAAwC;MACpC,IAAIK,gBAAgB,GAAGC,QAAQ,CAACC,gBAAT,CAA2B,IAAGL,OAAO,CAACF,cAAc,GAAC,CAAhB,CAAmB,EAAxD,CAAvB;;MAEA,KAAK,IAAIQ,CAAT,IAAcH,gBAAd,EAAgC;QAC5BG,CAAC,CAACC,SAAF,GAAc,QAAd;MACH;IACJ;EACJ;;EAID,SAASC,aAAT,GAAyB;IACrBC,OAAO,CAACC,GAAR,CAAY,GAAZ;;IACA,IAAIV,OAAO,CAACF,cAAc,GAAC,CAAhB,CAAP,KAA8B,IAAlC,EAAwC;MACpC,IAAIa,GAAG,GAAGP,QAAQ,CAACQ,aAAT,CAAuB,MAAvB,CAAV;MACAD,GAAG,CAACE,KAAJ,GAAUb,OAAO,CAACF,cAAc,GAAC,CAAhB,CAAjB;IACH;EAEJ;;EAGDL,SAAS,CAAC,MAAM;IACZ,IAAKI,YAAY,KAAK,yBAAtB,EAAiD;MAAEK,qBAAqB;IAAI,CAA5E,MACK;MAAEM,aAAa;IAAI;EAG3B,CALQ,EAKN,CAACV,cAAD,CALM,CAAT;;EAQJ,IAAIgB,GAAG,gBAAI;IAAA;IAAA;IAAA;EAAA,QAAX;;EAEI,IAAIjB,YAAY,KAAK,yBAArB,EAAgD;IAChD,OAAM;MAACiB;IAAD,CAAN;EACC,CAFD,MAQK;IACG,oBACI;MAAA,wBACI;QAAI,SAAS,EAAC,cAAd;QAAA,WAA8BhB,cAA9B,QAAgDH,YAAhD;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAO,SAAS,EAAC,UAAjB;QAA4B,EAAE,EAAE,KAAhC;QAAsC,QAAQ,EAAEoB,CAAC,IAAIhB,YAAY,CAACgB,CAAC,CAACC,MAAF,CAASH,KAAV;MAAjE;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAMH;AAGR;;GAhEQnB,Y;;KAAAA,Y;AAkET,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}