[{"/home/dan/code/projects/project2/frontend/src/index.js":"1","/home/dan/code/projects/project2/frontend/src/App.js":"2","/home/dan/code/projects/project2/frontend/src/reportWebVitals.js":"3","/home/dan/code/projects/project2/frontend/src/components/MainMenu.js":"4","/home/dan/code/projects/project2/frontend/src/components/LessonHub.js":"5","/home/dan/code/projects/project2/frontend/src/components/Quiz.js":"6","/home/dan/code/projects/project2/frontend/src/components/Login.js":"7","/home/dan/code/projects/project2/frontend/src/components/StudentInfo.js":"8","/home/dan/code/projects/project2/frontend/src/components/Register.js":"9","/home/dan/code/projects/project2/frontend/src/components/MainMenuCard.js":"10","/home/dan/code/projects/project2/frontend/src/components/GameData.js":"11","/home/dan/code/projects/project2/frontend/src/components/JapaneseLesson.js":"12","/home/dan/code/projects/project2/frontend/src/components/QuizQuestion.js":"13","/home/dan/code/projects/project2/frontend/src/components/StudentInfoQuizHistory.js":"14","/home/dan/code/projects/project2/frontend/src/components/QuizAnswers.js":"15","/home/dan/code/projects/project2/frontend/src/components/GameCommentary.js":"16","/home/dan/code/projects/project2/frontend/src/components/MainPagePic.js":"17","/home/dan/code/projects/project2/frontend/src/components/ExtraExample.js":"18","/home/dan/code/projects/project2/frontend/src/components/VocabularyTable.js":"19","/home/dan/code/projects/project2/frontend/src/components/Screenshot.js":"20"},{"size":591,"mtime":1635032980402,"results":"21","hashOfConfig":"22"},{"size":2541,"mtime":1668478885371,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1635030366832,"results":"24","hashOfConfig":"22"},{"size":1435,"mtime":1668475613891,"results":"25","hashOfConfig":"22"},{"size":4168,"mtime":1668478966271,"results":"26","hashOfConfig":"22"},{"size":10232,"mtime":1663033330573,"results":"27","hashOfConfig":"22"},{"size":3069,"mtime":1667779389966,"results":"28","hashOfConfig":"22"},{"size":804,"mtime":1667844428326,"results":"29","hashOfConfig":"22"},{"size":3410,"mtime":1662952958952,"results":"30","hashOfConfig":"22"},{"size":2180,"mtime":1667844379956,"results":"31","hashOfConfig":"22"},{"size":1080,"mtime":1662835767608,"results":"32","hashOfConfig":"22"},{"size":1753,"mtime":1667782762476,"results":"33","hashOfConfig":"22"},{"size":1972,"mtime":1667355324599,"results":"34","hashOfConfig":"22"},{"size":707,"mtime":1662934813052,"results":"35","hashOfConfig":"22"},{"size":1907,"mtime":1662941503892,"results":"36","hashOfConfig":"22"},{"size":729,"mtime":1667355324599,"results":"37","hashOfConfig":"22"},{"size":303,"mtime":1635630124682,"results":"38","hashOfConfig":"22"},{"size":946,"mtime":1667782674176,"results":"39","hashOfConfig":"22"},{"size":702,"mtime":1635630132882,"results":"40","hashOfConfig":"22"},{"size":284,"mtime":1667354810699,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"rle0pk",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/home/dan/code/projects/project2/frontend/src/index.js",[],["86","87"],"/home/dan/code/projects/project2/frontend/src/App.js",["88","89","90","91"],"/home/dan/code/projects/project2/frontend/src/reportWebVitals.js",[],"/home/dan/code/projects/project2/frontend/src/components/MainMenu.js",[],"/home/dan/code/projects/project2/frontend/src/components/LessonHub.js",["92","93","94"],"/home/dan/code/projects/project2/frontend/src/components/Quiz.js",["95","96","97","98"],"import React, { useEffect, useState } from \"react\"\nimport './styles/Quiz.css'\nimport { useParams, NavLink } from \"react-router-dom\"\nimport QuizQuestion from \"./QuizQuestion.js\"\nimport QuizAnswers from \"./QuizAnswers.js\"\n\nfunction Quiz({lessons, userName, url, userId, user, updateUserInfo}) {\n\n    const passingGrade = 65\n    let userUrl = url+userId\n    let userQuizData = {}\n   // let userId = null\n    ////console.log(userUrl)\n    \n    const params = useParams()\n\n\n    //let quizData = lessons.find(i => { return i.id === parseInt(params.id) * 5 }).quizData\n   // let noOfQuestions = 0\n //  let mcAnswers = 0\n    let [questionData, setQuestionData] = useState(null)\n   // let [oldGrade, setOldGrade] = useState(null)\n    let [quizData, setQuizData] = useState(null)\n    let [questionNumber, setQuestionNumber] = useState(1)\n    let [useKanji, setUseKanji] = useState(true)\n    let [questionType, setQuestionType] = useState(\"multipleChoiceQuestions\")\n    let [noOfQuestions, setNoOfQuestions] = useState(0)\n    let [answers, setAnswers] = useState([])\n    let [quizGoingOn, setQuizGoingOn] = useState(true)\n    let [mcAnswers, setMcAnswers] = useState(null)\n        \n\n\n\n    useEffect( () => {\n        \n        let url=\"/quizzes/\"+params.id\n        fetch(url)\n        .then(res => res.json())\n        .then(data => { \n            createQuiz(data)\n            let tempAns=[]\n        for(let i=0; i < noOfQuestions; i++) { tempAns.push(null) }\n        setAnswers([...tempAns])\n        })\n\n        \n    }, [])\n\n   \n    function createQuiz(data){\n        \n        let mcq = []\n        for (let i of data.questions) { \n            mcq.push({\n                question: i.ques,\n                choices: [\n                    i.choice1.split(\"||\"),\n                    i.choice2.split(\"||\"),\n                    i.choice3.split(\"||\"),\n                    i.choice4.split(\"||\")\n                ],\n                correctChoice: i.correctChoice\n\n            }) }\n        let qData = {\n            quizNo: params.id,\n            multipleChoiceQuestions: mcq\n        }\n        //console.log(\"qdata\", qData)\n        setNoOfQuestions(qData.multipleChoiceQuestions.length)\n        setMcAnswers(qData.multipleChoiceQuestions.map(i => i.correctChoice))\n        setQuestionData(qData.multipleChoiceQuestions[0])\n    \n        setQuizData(qData)\n\n    }\n\n    function handleChange(answer) {\n\n        let tempAnswer=[...answers]\n        \n\n        if ( questionType === \"multipleChoiceQuestions\") {\n            let oldChoice = document.querySelectorAll(\".chosen\")\n            \n            if (oldChoice.length !== 0) {\n                for (let i of oldChoice) {\n                    i.className = \"unchosen\"\n                }\n            }\n            answer.target.className=\"chosen\"\n            tempAnswer[questionNumber-1] = answer.target.id\n         }\n\n        else { \n            tempAnswer[questionNumber-1] = answer\n        }\n\n        //console.log(tempAnswer)\n        setAnswers([...tempAnswer])\n    }\n\n    function changeKanji(){\n        setUseKanji(!useKanji)\n    }\n\n    function goBack(){\n        if (questionNumber !== 1) { setQuestionNumber(questionNumber - 1) }\n        clearAnswers()\n    }\n\n    function goForward(){\n        if (questionNumber !== noOfQuestions) { setQuestionNumber(questionNumber + 1) }\n        clearAnswers()\n    }\n\n    function clearAnswers() {\n        //console.log(answers)\n\n        if ( questionType === \"multipleChoiceQuestions\") {\n            let oldChoice = document.querySelectorAll(\".chosen\")\n            \n            if (oldChoice.length !== 0) {\n                for (let i of oldChoice) {\n                    i.className = \"unchosen\"\n                }\n            }\n        \n\n\n         }\n\n         else {\n            let answerBox = document.querySelector(\"#box\")\n            answerBox.value=\"\"\n         }\n    }\n\n    useEffect(() => {\n        \n\n//        else { \n            setQuestionType(\"multipleChoiceQuestions\")\n            if (quizData) {\n            setQuestionData(quizData.multipleChoiceQuestions[questionNumber-1])\n         }\n    }, [questionNumber])\n\n\n\n\n\n    function getGrade() {\n        let right=0\n        let ques=\"question\"\n        for (let i=0; i < quizData.multipleChoiceQuestions.length; i++) {\n            if (mcAnswers[i] === answers[i]) { right += 1 }\n        }\n        if (right > 1) { ques += \"s\" }\n        if (right === 0) { ques += \"s\" }\n        let gradeSpiel = `You got ${right} ${ques} right out of ${quizData.multipleChoiceQuestions.length}. That's ${right/quizData.multipleChoiceQuestions.length*100}%`\n        document.querySelector(\"#grade\").innerHTML=gradeSpiel\n\n\n\n\n\n        let quizzes = {...user.quizzes}\n\n\n        quizzes[\"quiz\"+params.id] = {\n            \n                \n                \n                id: quizData.quizNo,\n                mcScore: Math.floor(right/quizData.multipleChoiceQuestions.length*100),\n           \n                }\n            \n                return Math.floor(right/quizData.multipleChoiceQuestions.length*100)\n          \n        //  user.canBeGraded = false\n       //   let fullquizzes = {...user, quizzes}\n          \n      // //console.log(user)\n        \n\n\n    }\n    // <p className=\"centeredText\">Question {questionNumber} of {noOfQuestions}</p>\n\n\n    let backButton = <div><br /><button onClick={goBack}>Previous Question</button></div>\n    let submitButton = <div><br /><button className=\"inputBox\"  onClick={gradeQuiz}>Let's Get this Baby Graded!</button></div>\n    let nextButton = <div><br /><button onClick={goForward}>Next Question</button></div>\n    let kanjiButton = (\n            <div>\n                <br />\n                {useKanji ? <button onClick={changeKanji}>Get rid of the Kanji</button> : <button onClick={changeKanji}>Show me the Kanji</button>}\n            </div>\n    )\n    let backToMenuButton = (\n        <div>\n            <br />\n                <NavLink to=\"../../\">\n                    <button>Return to Main Menu</button>\n                </NavLink>\n        </div>\n    )\n\n    let quizAnswers = (\n        <div>\n            <QuizAnswers answers={answers} quizData={quizData} useKanji={useKanji}/>\n        </div>\n    )\n\n     let questionComponent = <QuizQuestion questionData={questionData} useKanji={useKanji} questionType={questionType} questionNumber={questionNumber} handleChange={handleChange} answers={answers} />\n\n\n\n\n    function setgoingOn(){\n        setQuizGoingOn(!quizGoingOn)\n    }\n\n\n    function openNextChapter(uid) { \n        let url = \"/users/\" + uid\n//console.log(\"url\", url)\n        fetch(url, {\n                \n            method: 'PATCH',\n            headers: { \n              'Content-Type': 'application/json',\n              accept: 'application/json' \n            },\n            body: JSON.stringify({gotHowFar: parseInt(params.id) + 1})\n          })\n          .then(res => res.json())\n          .then(() => setgoingOn())\n    \n\n    }\n\n    function processGrade(userQuizData) { \n             /*\n   \n        //console.log(passingGrade, userQuizData.mcScore, userQuizData.mcScore >= passingGrade)\n        //console.log(userQuizData.user.gotHowFar, params.id, userQuizData.user.gotHowFar <= params.id)\n        //console.log((userQuizData.mcScore >= passingGrade) && (userQuizData.user.gotHowFar <= params.id))\n        //get 'userquiz/:userid/:quizid', to:'userquizzes#userandquiz'\n\n                \"id\": 1,\n                \"quizNo\": 1,\n                \"mcScore\": 65,\n                \"user_id\": 1\n       \n       //console.log(\"full data\", userQuizData)\n        //console.log(\"quiz id\", params.id)\n        //console.log(\"user id\", userId)\n        //console.log(\"old grade\", userQuizData.mcScore)\n        //console.log(\"grade\", getGrade())\n\n        */\n\n          let url = \"/userquizzes/\" + userQuizData.id\n\n        fetch(url, {\n            method: 'PATCH',\n            headers: { \n              'Content-Type': 'application/json',\n              accept: 'application/json' \n            },\n            body: JSON.stringify({mcScore: getGrade()})\n          })\n          .then(res => res.json())\n          .then(data => { \n            if ((userQuizData.mcScore >= passingGrade) && (userQuizData.user.gotHowFar <= params.id)) {\n                openNextChapter(data.user.id)\n            }\n            else { setgoingOn() }\n          }\n            )\n      \n        //if grade > 65, gotthrough == quizid + 1\n      \n    }\n\n    function createNewQuiz() {\n        let uq = {\n            quizNo: params.id,\n            mcScore: getGrade(),\n            user_id: userId\n        }\n        //console.log(uq)\n        \n        let url = \"/userquizzes/\"\n\n        fetch(url, {\n            method: 'POST',\n            headers: { \n              'Content-Type': 'application/json',\n              accept: 'application/json' \n            },\n            body: JSON.stringify(uq)\n          })\n          .then(res => res.json())\n          .then(data => { //console.log(data)\n            if ((uq.mcScore >= passingGrade) && (data.user.gotHowFar <= params.id)) {\n                openNextChapter(data.user.id)\n            }\n            else { setgoingOn() }\n          }\n            )\n\n    }\n\n    function gradeQuiz() {\n\n        fetch(\"/userquiz/\" + userId + \"/\" + params.id)\n        .then(res => res.json())\n        .then(data => {\n            if (!data) { createNewQuiz(data) }\n            else { processGrade(data) }\n        })\n        \n     \n    }\n//246:  {quizGoingOn ? questionComponent : null}\n    return (\n        <div className=\"quizPage\">\n            \n\n            <div className=\"questionNumber\">{quizGoingOn ? kanjiButton : quizAnswers}</div>\n\n            \n\n            <div className=\"kanjiKanaButton\">{quizGoingOn ? backToMenuButton : null}</div>\n\n\n            <div className=\"quizQuestion\">\n            {quizGoingOn ? questionComponent : null}\n            </div>\n\n            <div className=\"backButton\">{quizGoingOn ? backButton : null}</div>\n            <div className=\"submitButton\">{quizGoingOn ? submitButton : null}</div>\n            <div className=\"nextButton\">{quizGoingOn ? nextButton : null}</div>\n\n\n\n           \n\n            <div className=\"middleForDev\" onClick={setgoingOn}>\n                <p className=\"centeredText\" id=\"grade\"></p>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Quiz","/home/dan/code/projects/project2/frontend/src/components/Login.js",["99","100","101","102","103"],"/home/dan/code/projects/project2/frontend/src/components/StudentInfo.js",["104"],"/home/dan/code/projects/project2/frontend/src/components/Register.js",["105"],"import React, {useState, useEffect} from \"react\"\nimport {useHistory, NavLink} from \"react-router-dom\"\nimport './styles/Quiz.css'\n\nimport './styles/MainMenu.css'\n\nfunction Register({url}) {\n\n\n\n    let history = useHistory()\n\n    let [formData, setFormData] = useState({\n        userName: \"\",\n        password1: \"\",\n        password2: \"\",\n        email: \"\",\n    })\n\n    function handleChange(e) {\n        setFormData({\n            ...formData,\n            [e.target.id]: e.target.value})\n    }\n\n\n\n\n    function registerUser(e) {\n        e.preventDefault()\n        \n        if (formData.password1 !== formData.password2) { \n            document.querySelector(\"#errorMessage\").innerHTML=\"Passwords Don't Match.\"\n            return 0\n        }\n\n        if (formData.userName.length === 0) { \n            document.querySelector(\"#errorMessage\").innerHTML=\"User Name Can't Be Empty.\"\n            return 0\n        }\n\n        if (formData.password1.length === 0) { \n            document.querySelector(\"#errorMessage\").innerHTML=\"Password Can't Be Empty.\"\n            return 0\n        }\n\n        if (formData.password2.length === 0) { \n            document.querySelector(\"#errorMessage\").innerHTML=\"Password Can't Be Empty.\"\n            return 0\n        }\n\n        if (formData.email.length === 0) { \n            document.querySelector(\"#errorMessage\").innerHTML=\"Email Address Can't Be Empty.\"\n            return 0\n        }\n\n\n   //         let check=data.find(i => i.userName === formData.userName)\n   //        if (check !== undefined) { \n   //         document.querySelector(\"#errorMessage\").innerHTML=\"User already exists. Please choose another user name.\"\n  //          return 0\n  //      }\n\n        document.querySelector(\"#errorMessage\").innerHTML=\"\"\n\n        let userData = {\n            userName: formData.userName,\n            password: formData.password1,\n            password_confirmation: formData.password2,\n            email: formData.email,\n            gotHowFar: 1,\n            paidHowFar: 50,\n            quizzes: [\n              \n            ]\n          }\n\n\n\n          \n        fetch(\"/users/\", {\n          method: 'POST',\n          headers: { \n            'Content-Type': 'application/json',\n            accept: 'application/json' \n          },\n          body: JSON.stringify(userData)\n        })\n        .then(res => res.json())\n  //      .then(data => console.log(data))\n        .then(history.push(\"/login/\"))\n\n\n\n\n\n        \n\n\n    }\n\n    // \n\n\n    return(\n        <div>\n            <h1 className=\"centeredText\">Registration Page</h1>\n            <p className=\"error\" id=\"errorMessage\"></p>\n            <form>\n                <p className=\"centeredText\">User Name: <input id=\"userName\" onChange={e => handleChange(e)} /></p>\n                <p className=\"centeredText\">Email Address: <input id=\"email\" onChange={e => handleChange(e)} /></p>\n                <p className=\"centeredText\">Password: <input id=\"password1\" type=\"password\" onChange={e => handleChange(e)} /></p>\n                <p className=\"centeredText\">Password: <input id=\"password2\" type=\"password\" onChange={e => handleChange(e)} /></p>\n                <NavLink to=\"/login\"><p className=\"centeredText\"><button>Back</button></p></NavLink>\n                <p className=\"centeredText\"><button onClick={e => registerUser(e)}>Register</button></p>\n                <br />\n            </form>\n        </div>\n    )\n}\n\nexport default Register","/home/dan/code/projects/project2/frontend/src/components/MainMenuCard.js",[],"/home/dan/code/projects/project2/frontend/src/components/GameData.js",[],"/home/dan/code/projects/project2/frontend/src/components/JapaneseLesson.js",[],"/home/dan/code/projects/project2/frontend/src/components/QuizQuestion.js",["106"],"import React, { useEffect } from \"react\"\nimport './styles/Quiz.css'\n\nfunction QuizQuestion({questionData, useKanji, questionType, questionNumber, handleChange, answers}) {\n\n  //  console.log(questionData)\n    let choices\n\n    if ( questionData) {\n\n        if (useKanji) { choices = questionData.choices.map(i => i[0]) }\n        if (!useKanji) { choices = questionData.choices.map(i => i[1]) }\n\n       \n\n\n    }\n\n\n    function restoreMultipleChoice() {\n        if (answers[questionNumber-1] !== null) {\n            let previouslyChosen = document.querySelectorAll(`#${answers[questionNumber-1]}`)\n            \n            for (let i of previouslyChosen) {\n                i.className = \"chosen\"\n            }\n        }\n    }\n\n\n\n    function restoreAnswer() {\n    //    console.log(\"A\")\n        if (answers[questionNumber-1] !== null) {\n            let box = document.querySelector(\"#box\")\n            box.value=answers[questionNumber-1]\n        }\n\n    }\n\n\n    useEffect(() => {\n        if ( questionType === \"multipleChoiceQuestions\") { restoreMultipleChoice() }\n        else { restoreAnswer() }\n\n\n    }, [questionNumber])\n\n    if (questionData) {\n    return(\n        <div className=\"questionDiv\">\n        <h3 className=\"centeredText\">{questionNumber}. {questionData.question}</h3>\n        <div id=\"A\" className=\"unchosen\" onClick={e => handleChange(e)} >\n            <p id=\"A\">Ａ。{choices[0]}</p>\n        </div>\n    \n        <div id=\"B\" className=\"unchosen\" onClick={e => handleChange(e)} >\n            <p id=\"B\">Ｂ。{choices[1]}</p>\n        </div>\n    \n        <div id=\"C\" className=\"unchosen\" onClick={e => handleChange(e)} >\n            <p id=\"C\">Ｃ。{choices[2]}</p>\n        </div>\n    \n        <div id=\"D\" className=\"unchosen\" onClick={e => handleChange(e)} >\n            <p id=\"D\">Ｄ。{choices[3]}</p>\n        </div>\n        <br />\n    </div>\n    )\n    }\n\n    else {\n        return(\n            <div></div>\n        )\n    }\n\n\n\n\n\n}\n\nexport default QuizQuestion","/home/dan/code/projects/project2/frontend/src/components/StudentInfoQuizHistory.js",[],"/home/dan/code/projects/project2/frontend/src/components/QuizAnswers.js",[],"/home/dan/code/projects/project2/frontend/src/components/GameCommentary.js",[],"/home/dan/code/projects/project2/frontend/src/components/MainPagePic.js",[],"/home/dan/code/projects/project2/frontend/src/components/ExtraExample.js",["107"],"/home/dan/code/projects/project2/frontend/src/components/VocabularyTable.js",[],"/home/dan/code/projects/project2/frontend/src/components/Screenshot.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":10,"column":8,"nodeType":"114","messageId":"115","endLine":10,"endColumn":19},{"ruleId":"112","severity":1,"message":"116","line":24,"column":8,"nodeType":"114","messageId":"115","endLine":24,"endColumn":14},{"ruleId":"112","severity":1,"message":"117","line":45,"column":10,"nodeType":"114","messageId":"115","endLine":45,"endColumn":18},{"ruleId":"118","severity":1,"message":"119","line":123,"column":1,"nodeType":"120","messageId":"121","endLine":127,"endColumn":14},{"ruleId":"112","severity":1,"message":"122","line":9,"column":9,"nodeType":"114","messageId":"115","endLine":9,"endColumn":16},{"ruleId":"112","severity":1,"message":"123","line":10,"column":12,"nodeType":"114","messageId":"115","endLine":10,"endColumn":18},{"ruleId":"124","severity":1,"message":"125","line":23,"column":23,"nodeType":"114","endLine":23,"endColumn":27},{"ruleId":"112","severity":1,"message":"126","line":10,"column":9,"nodeType":"114","messageId":"115","endLine":10,"endColumn":16},{"ruleId":"112","severity":1,"message":"127","line":11,"column":9,"nodeType":"114","messageId":"115","endLine":11,"endColumn":21},{"ruleId":"124","severity":1,"message":"128","line":48,"column":8,"nodeType":"129","endLine":48,"endColumn":10,"suggestions":"130"},{"ruleId":"124","severity":1,"message":"131","line":148,"column":8,"nodeType":"129","endLine":148,"endColumn":24,"suggestions":"132"},{"ruleId":"112","severity":1,"message":"133","line":3,"column":19,"nodeType":"114","messageId":"115","endLine":3,"endColumn":25},{"ruleId":"112","severity":1,"message":"134","line":3,"column":27,"nodeType":"114","messageId":"115","endLine":3,"endColumn":37},{"ruleId":"135","severity":1,"message":"136","line":11,"column":9,"nodeType":"137","messageId":"138","endLine":13,"endColumn":41},{"ruleId":"112","severity":1,"message":"139","line":16,"column":14,"nodeType":"114","messageId":"115","endLine":16,"endColumn":18},{"ruleId":"112","severity":1,"message":"140","line":48,"column":14,"nodeType":"114","messageId":"115","endLine":48,"endColumn":22},{"ruleId":"112","severity":1,"message":"141","line":9,"column":11,"nodeType":"114","messageId":"115","endLine":9,"endColumn":18},{"ruleId":"112","severity":1,"message":"142","line":1,"column":26,"nodeType":"114","messageId":"115","endLine":1,"endColumn":35},{"ruleId":"124","severity":1,"message":"143","line":47,"column":8,"nodeType":"129","endLine":47,"endColumn":24,"suggestions":"144"},{"ruleId":"112","severity":1,"message":"145","line":8,"column":9,"nodeType":"114","messageId":"115","endLine":8,"endColumn":11},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'StudentInfo' is defined but never used.","Identifier","unusedVar","'titles' is assigned a value but never used.","'massacre' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'lessons' is assigned a value but never used.","'lesson' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'lessons' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","'userUrl' is assigned a value but never used.","'userQuizData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'createQuiz', 'noOfQuestions', and 'params.id'. Either include them or remove the dependency array.","ArrayExpression",["148"],"React Hook useEffect has a missing dependency: 'quizData'. Either include it or remove the dependency array.",["149"],"'Switch' is defined but never used.","'useHistory' is defined but never used.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode","'logg' is defined but never used.","'oldLogin' is defined but never used.","'history' is assigned a value but never used.","'useEffect' is defined but never used.","React Hook useEffect has missing dependencies: 'questionType', 'restoreAnswer', and 'restoreMultipleChoice'. Either include them or remove the dependency array.",["150"],"'br' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},"Update the dependencies array to be: [createQuiz, noOfQuestions, params.id]",{"range":"157","text":"158"},"Update the dependencies array to be: [questionNumber, quizData]",{"range":"159","text":"160"},"Update the dependencies array to be: [questionNumber, questionType, restoreAnswer, restoreMultipleChoice]",{"range":"161","text":"162"},[1505,1507],"[createQuiz, noOfQuestions, params.id]",[4067,4083],"[questionNumber, quizData]",[1103,1119],"[questionNumber, questionType, restoreAnswer, restoreMultipleChoice]"]