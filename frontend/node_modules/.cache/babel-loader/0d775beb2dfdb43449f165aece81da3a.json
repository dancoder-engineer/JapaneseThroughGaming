{"ast":null,"code":"var _jsxFileName = \"/home/dan/code/projects/project2/japanese-gaming-course/src/components/QuizQuestion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport './styles/Quiz.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction QuizQuestion(_ref) {\n  _s();\n\n  let {\n    questionData,\n    useKanji,\n    questionType,\n    questionNumber,\n    handleChange,\n    answers\n  } = _ref;\n  console.log(questionData);\n  let choices;\n\n  if (questionData) {\n    if (useKanji) {\n      choices = questionData.choices.map(i => i[0]);\n    }\n\n    if (!useKanji) {\n      choices = questionData.choices.map(i => i[1]);\n    }\n  }\n\n  function restoreMultipleChoice() {\n    if (answers[questionNumber - 1] !== null) {\n      let previouslyChosen = document.querySelectorAll(`#${answers[questionNumber - 1]}`);\n\n      for (let i of previouslyChosen) {\n        i.className = \"chosen\";\n      }\n    }\n  }\n\n  function restoreAnswer() {\n    console.log(\"A\");\n\n    if (answers[questionNumber - 1] !== null) {\n      let box = document.querySelector(\"#box\");\n      box.value = answers[questionNumber - 1];\n    }\n  }\n\n  useEffect(() => {\n    if (questionType === \"multipleChoiceQuestions\") {\n      restoreMultipleChoice();\n    } else {\n      restoreAnswer();\n    }\n  }, [questionNumber]);\n\n  if (questionType === \"multipleChoiceQuestions\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"centeredText\",\n        children: [questionNumber, \". \", questionData]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"inputBox\",\n        id: \"box\",\n        onChange: e => handleChange(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }, this);\n  }\n}\n\n_s(QuizQuestion, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = QuizQuestion;\nexport default QuizQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizQuestion\");","map":{"version":3,"names":["React","useEffect","QuizQuestion","questionData","useKanji","questionType","questionNumber","handleChange","answers","console","log","choices","map","i","restoreMultipleChoice","previouslyChosen","document","querySelectorAll","className","restoreAnswer","box","querySelector","value","e","target"],"sources":["/home/dan/code/projects/project2/japanese-gaming-course/src/components/QuizQuestion.js"],"sourcesContent":["import React, { useEffect } from \"react\"\nimport './styles/Quiz.css'\n\nfunction QuizQuestion({questionData, useKanji, questionType, questionNumber, handleChange, answers}) {\n\n    console.log(questionData)\n    let choices\n\n    if ( questionData) {\n\n        if (useKanji) { choices = questionData.choices.map(i => i[0]) }\n        if (!useKanji) { choices = questionData.choices.map(i => i[1]) }\n\n       \n\n\n    }\n\n\n    function restoreMultipleChoice() {\n        if (answers[questionNumber-1] !== null) {\n            let previouslyChosen = document.querySelectorAll(`#${answers[questionNumber-1]}`)\n            \n            for (let i of previouslyChosen) {\n                i.className = \"chosen\"\n            }\n        }\n    }\n\n\n\n    function restoreAnswer() {\n        console.log(\"A\")\n        if (answers[questionNumber-1] !== null) {\n            let box = document.querySelector(\"#box\")\n            box.value=answers[questionNumber-1]\n        }\n\n    }\n\n\n    useEffect(() => {\n        if ( questionType === \"multipleChoiceQuestions\") { restoreMultipleChoice() }\n        else { restoreAnswer() }\n\n\n    }, [questionNumber])\n\n    if (questionType === \"multipleChoiceQuestions\") {\n    return(\n        <div></div>\n    )\n    }\n\n\n\n\n\n    else {\n            return(\n                <div>\n                    <h3 className=\"centeredText\">{questionNumber}. {questionData}</h3>\n                    <input className=\"inputBox\" id =\"box\" onChange={e => handleChange(e.target.value)} />\n                </div>\n            )\n        }\n    \n\n}\n\nexport default QuizQuestion"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,mBAAP;;;AAEA,SAASC,YAAT,OAAqG;EAAA;;EAAA,IAA/E;IAACC,YAAD;IAAeC,QAAf;IAAyBC,YAAzB;IAAuCC,cAAvC;IAAuDC,YAAvD;IAAqEC;EAArE,CAA+E;EAEjGC,OAAO,CAACC,GAAR,CAAYP,YAAZ;EACA,IAAIQ,OAAJ;;EAEA,IAAKR,YAAL,EAAmB;IAEf,IAAIC,QAAJ,EAAc;MAAEO,OAAO,GAAGR,YAAY,CAACQ,OAAb,CAAqBC,GAArB,CAAyBC,CAAC,IAAIA,CAAC,CAAC,CAAD,CAA/B,CAAV;IAA+C;;IAC/D,IAAI,CAACT,QAAL,EAAe;MAAEO,OAAO,GAAGR,YAAY,CAACQ,OAAb,CAAqBC,GAArB,CAAyBC,CAAC,IAAIA,CAAC,CAAC,CAAD,CAA/B,CAAV;IAA+C;EAKnE;;EAGD,SAASC,qBAAT,GAAiC;IAC7B,IAAIN,OAAO,CAACF,cAAc,GAAC,CAAhB,CAAP,KAA8B,IAAlC,EAAwC;MACpC,IAAIS,gBAAgB,GAAGC,QAAQ,CAACC,gBAAT,CAA2B,IAAGT,OAAO,CAACF,cAAc,GAAC,CAAhB,CAAmB,EAAxD,CAAvB;;MAEA,KAAK,IAAIO,CAAT,IAAcE,gBAAd,EAAgC;QAC5BF,CAAC,CAACK,SAAF,GAAc,QAAd;MACH;IACJ;EACJ;;EAID,SAASC,aAAT,GAAyB;IACrBV,OAAO,CAACC,GAAR,CAAY,GAAZ;;IACA,IAAIF,OAAO,CAACF,cAAc,GAAC,CAAhB,CAAP,KAA8B,IAAlC,EAAwC;MACpC,IAAIc,GAAG,GAAGJ,QAAQ,CAACK,aAAT,CAAuB,MAAvB,CAAV;MACAD,GAAG,CAACE,KAAJ,GAAUd,OAAO,CAACF,cAAc,GAAC,CAAhB,CAAjB;IACH;EAEJ;;EAGDL,SAAS,CAAC,MAAM;IACZ,IAAKI,YAAY,KAAK,yBAAtB,EAAiD;MAAES,qBAAqB;IAAI,CAA5E,MACK;MAAEK,aAAa;IAAI;EAG3B,CALQ,EAKN,CAACb,cAAD,CALM,CAAT;;EAOA,IAAID,YAAY,KAAK,yBAArB,EAAgD;IAChD,oBACI;MAAA;MAAA;MAAA;IAAA,QADJ;EAGC,CAJD,MAUK;IACG,oBACI;MAAA,wBACI;QAAI,SAAS,EAAC,cAAd;QAAA,WAA8BC,cAA9B,QAAgDH,YAAhD;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAO,SAAS,EAAC,UAAjB;QAA4B,EAAE,EAAE,KAAhC;QAAsC,QAAQ,EAAEoB,CAAC,IAAIhB,YAAY,CAACgB,CAAC,CAACC,MAAF,CAASF,KAAV;MAAjE;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAMH;AAGR;;GAjEQpB,Y;;KAAAA,Y;AAmET,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}